---
- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest
    update_cache: yes

- name: Installation of security packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - sendmail
      - fail2ban
      - rkhunter
      - logwatch
      - unattended-upgrades
  register: apt

- name: Copy Fail2Ban Configuration
  copy:
    src: ./roles/secure/files/fail2ban/jail.local
    dest: /etc/fail2ban/jail.local
  register: fail2ban_config
  
- name: Restart service httpd, in all cases
  service:
    name: fail2ban
    state: restarted
  when: fail2ban_config.changed

- name: Copy security sources to new file
  shell: grep security /etc/apt/sources.list > /etc/apt/security.sources.list
  when: apt.changed

- name: Enables auto clean packages for 7 days
  blockinfile:
    path: /etc/apt/apt.conf.d/20auto-upgrades
    block: |
      APT::Periodic::AutocleanInterval "7";
      Unattended-Upgrade::Automatic-Reboot "true";
      Unattended-Upgrade::Automatic-Reboot-Time "05:00";
      Unattended-Upgrade::Mail "{{ EMAIL_FOR_SECURITY }}";

- name: Enable unattended-upgrades service
  systemd:
    name: unattended-upgrades
    enabled: yes
    state: started

- name: Ensure REPORT_EMAIL is set
  lineinfile:
    path: /etc/default/rkhunter
    regexp: '^REPORT_EMAIL='
    line: REPORT_EMAIL="{{ EMAIL_FOR_SECURITY }}"

- name: Ensure ALLOW_SSH_ROOT_USER yes
  lineinfile:
    path: /etc/rkhunter.conf
    regexp: '^#ALLOW_SSH_ROOT_USER'
    line: ALLOW_SSH_ROOT_USER=yes

- name: Disable warning for false positive
  blockinfile:
    path: /etc/rkhunter.conf
    block: |
      SCRIPTWHITELIST=/usr/bin/egrep
      SCRIPTWHITELIST=/usr/bin/fgrep
      SCRIPTWHITELIST=/usr/bin/which

- name: Update rkhunter database
  shell: rkhunter --propupd

- name: Check that logwatch.conf exists
  stat:
    path: /etc/logwatch/conf/logwatch.conf
  register: logwatch_state

- name: Create Logwatch configuration
  shell: cp /usr/share/logwatch/default.conf/logwatch.conf /etc/logwatch/conf/logwatch.conf
  when: logwatch_state.stat.exists == False

- name: Ensure Format is html
  lineinfile:
    path: /etc/logwatch/conf/logwatch.conf
    regexp: '^Format ='
    line: Format = html

- name: Ensure MailTo is set
  lineinfile:
    path: /etc/logwatch/conf/logwatch.conf
    regexp: '^MailTo ='
    line: MailTo = {{ EMAIL_FOR_SECURITY }}

- name: Ensure Detail is Med
  lineinfile:
    path: /etc/logwatch/conf/logwatch.conf
    regexp: '^Detail ='
    line: Detail = Med

- name: Ensure temporary folder for logwatch exist
  file:
    path: /var/cache/logwatch
    state: directory